/*
	问题描述
　　从前，有一只吃包子很厉害的猴子，它可以吃无数个包子，但是，它吃不同的包子速度也不同；肉包每秒钟吃x个；韭菜包每秒钟吃y个；
   没有馅的包子每秒钟吃z个；现在有x1个肉包，y1个韭菜包，z1个没有馅的包子；问：猴子吃完这些包子要多久？结果保留p位小数。
   输入格式
   　　输入1行，包含7个整数，分别表示吃不同包子的速度和不同包子的个数和保留的位数。
	输出格式
	 　　输出一行，包含1个实数，表示吃完所有包子的时间。
	   样例输入
	   4 3 2 20 30 15 2
	   样例输出
	   22.50
	   数据规模和约定
	   　　0<x<100;0<y<100;0<z<100;0<x1<=1000000;0<y1<=10000000;0<z1<=10000000;0<p<=1000
		 
		 观察：数据规模不超过int类型范围，所以可以用int进行计算

		 补充说明：该方法网上学来的，自己敲的过程中，并没有严格按照C语言格式申明变量
		 来源：https://blog.csdn.net/Jaggie_Yan/article/details/105202621
*/

#include<stdio.h>
#include<stdlib.h>

int main7_11_01() {
	int x, y, z, x1, y1, z1, p;
	scanf_s("%d%d%d%d%d%d%d", &x, &y, &z, &x1, &y1, &z1, &p);
	//通分再计算，可以预防位数不一致导致小数点数值缺失，先取整数部分
	int result1 = (x1*y*z + y1*x*z + z1*x*y ) / (x*y*z);
	printf("%d.", result1);

	int result2 = (x1*y*z + y1*x*z + z1*x*y) % (x*y*z);
	//取小数部分
	result2 *= 10;
	while (p > 0)
	{
		int s=result2 / (x*y*z);
		result2 = (result2 % (x*y*z)) * 10;
		p--;
		//当取到最后一位时，要进行四舍五入检查
		if (p == 0) {
			if ((result2 / (x*y*z)) >= 5) {
				s++;
			}
		}
		printf("%d", s);
	}
	return 0;
}



